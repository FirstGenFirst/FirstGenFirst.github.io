{% include sass_variables.scss %}

{% assign slideids = "" | split: "" %}
{%- for slide in page.slides -%}
    {%- assign slideid = slide | downcase | replace: "-", "" | replace: "&", "and" | replace: " ", "-" | split: " " -%}
    {%- assign slideids = slideids | concat: slideid -%}
{%- endfor -%}

$slides: [{{ slideids | join: "," }}];

$lightcolor: white;
$darkcolor: black;
$linkcolor: #303F9F;

$transition: 0.5s cubic-bezier(0.77,0.2,0.05,1.0);
$sqrt3: 1.73205080757;

$hex-margin: .5rem;

$hex-focus-scale: 1.3;

@function css-min($args...) {
	@return m#{i}n(#{$args});
}

@function css-max($args...) {
	@return m#{a}x(#{$args});
}

@function hex-width($multiplier: 1) {
	// min((100vw - $hex-margin / 2 * $sqrt3 * 2 - $hex-margin * 2) / 5 * 2, (100vh - $hex-margin * 5) / 4 / 2 / $sqrt3 * 2 * 2)
	@return css-min(unquote("#{40vw * $multiplier} - #{$hex-margin * ($sqrt3 + 2) / 2.5 * $multiplier}"), unquote("#{50vh / $sqrt3 * $multiplier} - #{$hex-margin * 2.5 / $sqrt3 * $multiplier}"));
}

@function hex-height($multiplier: 1) {
	// $hex-width / 2 * $sqrt3
	@return css-min(unquote("#{20vw * $sqrt3 * $multiplier} - #{$hex-margin * ($sqrt3 + 2) * $sqrt3 / 5 * $multiplier}"), unquote("#{25vh * $multiplier} - #{$hex-margin * 1.25 * $multiplier}"));
}

@mixin hidden {
	opacity: 0;
	pointer-events: none;
	transition: opacity $transition;
}

@mixin shown {
	opacity: 1;
	pointer-events: initial;
	transition: opacity $transition;
}

@font-face {
	font-family: 'League Spartan';
	src: url('{{ site.baseurl }}/{{ site.mediadir }}/leaguespartan-bold-webfont.woff2') format('woff2'),
		url('{{ site.baseurl }}/{{ site.mediadir }}/leaguespartan-bold-webfont.woff') format('woff'),
		url('{{ site.baseurl }}/{{ site.mediadir }}/leaguespartan-bold-webfont.otf') format('opentype');
	font-weight: bold;
	font-style: normal;
}

@keyframes hover-hex {
	from {
		stroke-dashoffset: 0px;
	}

	to {
		stroke-dashoffset: 6px;
	}
}

html,
body {
	margin: 0;
	overflow: hidden;
	height: 100%;
}

body {
	background-color: $primary;
	position: relative;
	transform: translateY(calc((100% - 100vh) / 2));
	overflow: visible;
}

#content {
	height: 100%;
	transition: transform $transition;
}

.hex {
	@include shown;
	display: inline-block;
	position: absolute;
	top: 50vh;
	left: 50%;
	transform: translate(-50%, -50%);
	transition: transform $transition,
		opacity $transition;

	svg {
		height: hex-height();
		width: hex-width();

		a {
			outline: none;

			&:hover polygon,
			&:focus polygon {
				stroke-width: 1.5px;
				animation: hover-hex 1s linear infinite;
			}
		}

		polygon {
			fill: $secondary;
			stroke: $secondary;
			stroke-width: 0;
			stroke-dasharray: 3px 3px;
			stroke-linejoin: round;
		}
	}

	> div {
		position: absolute;
		height: 100%;
		width: 100%;
		top: 0;
		left: 0;
		display: flex;
		flex-direction: column;
		justify-content: center;
		pointer-events: none;
		font-size: hex-width(.11);

		> h2 {
			padding: 0 12.5%;
			text-align: center;
			color: $lightcolor;
			font-family: "League Spartan", sans-serif;
			font-weight: bold;
			-webkit-hyphens: auto;
			-ms-hyphens: auto;
			hyphens: auto;
			font-size: 1em;
		}
	}

	&.loc-1 {
		transform: translate(-50%, -50%)
			translate(calc(-75% - #{$hex-margin} * 0.5 * #{$sqrt3}), calc(-100% - #{$hex-margin}));
	}

	&.loc-2 {
		transform: translate(-50%, -50%)
			translate(0,calc(-150% - #{$hex-margin} * 1.5));
	}

	&.loc-3 {
		transform: translate(-50%, -50%)
			translate(calc(75% + #{$hex-margin} * 0.5 * #{$sqrt3}), calc(-100% - #{$hex-margin}));
	}

	&.loc-4 {
		transform: translate(-50%, -50%)
			translate(calc(-75% - #{$hex-margin} * 0.5 * #{$sqrt3}), 0);
	}

	&.loc-5 {
		transform: translate(-50%, -50%)
			translate(calc(75% + #{$hex-margin} * 0.5 * #{$sqrt3}), 0);
	}

	&.loc-6 {
		transform: translate(-50%, -50%)
			translate(calc(-75% - #{$hex-margin} * 0.5 * #{$sqrt3}), calc(100% + #{$hex-margin}));
	}

	&.loc-7 {
		transform: translate(-50%, -50%)
			translate(0,calc(150% + #{$hex-margin} * 1.5));
	}

	&.loc-8 {
		transform: translate(-50%, -50%)
			translate(calc(75% + #{$hex-margin} * 0.5 * #{$sqrt3}), calc(100% + #{$hex-margin}));
	}

	&.loc-9 {
		transform: translate(-50%, -50%)
			translate(0,calc(-50% - #{$hex-margin} * .5));
	}

	&.loc-10 {
		transform: translate(-50%, -50%)
			translate(0,calc(50% + #{$hex-margin} * .5));
	}
}

@each $slide in $slides {
	##{$slide}:target ~ #content {
		transform: translateY(calc((100% - 100vh) / -2));

		#text-container-#{$slide} {
			@include shown;
		}

		#hex-#{$slide} {
			transform: translate(-50%, 15%)
				translateY(calc(-50vh + #{$hex-margin}))
				scale($hex-focus-scale)
				!important;

			a.forward {
				display: none;
			}

			polygon {
				stroke-width: 1.5px;
				animation: hover-hex 1s linear infinite;
			}
		}

		.hex:not(#hex-#{$slide}) {
			@include hidden;
		}

		#title-circle {
			@include hidden;
		}

		#site-1 {
			@include hidden;
		}

		#site-2 {
			@include shown;
		}
	}

	##{$slide}:not(:target) ~ #content {
		#text-#{$slide} {
			@include hidden;
		}

		#hex-#{$slide} a.back {
			display: none;
		}
	}
}

#title-circle {
	@include shown;
	width: hex-width();
	position: absolute;
	top: 50vh;
	left: 50%;
	transform: translate(-50%,-50%);

	circle {
		fill: white;
	}

	div {
		position: absolute;
		text-align: center;
		top: 50%;
		left: 0;
		width: 100%;
		transform: translateY(-50%);
		font-family: Chewy, sans-serif;
		font-size: hex-width(.12);
	}
}

#site-1 {
	@include shown;
	text-align: center;
	position: absolute;
	height: hex-height(.7);
	top: calc(50vh + #{hex-height()} * .3 + 0.5em);
	left: 50%;
	display: flex;
	flex-direction: column;
	justify-content: center;
	transform: translateX(-50%);
	font-size: hex-width(.09);

	a {
		color: $lightcolor;
		font-family: "Open Sans", sans-serif;
		font-weight: 300;
		text-decoration: none;

		&:hover,
		&:focus {
			text-decoration: underline;
		}
	}
}

#site-2 {
	@include hidden;
	text-align: center;
	position: absolute;
	top: calc(100% - 2.2rem);
	left: 50%;
	display: flex;
	flex-direction: column;
	justify-content: center;
	transform: translateX(-50%);
	font-size: 1.2rem;

	a {
		color: $darkcolor;
		font-family: "Open Sans", sans-serif;
		font-weight: 300;
		text-decoration: none;

		&:hover,
		&:focus {
			text-decoration: underline;
		}
	}
}

.text-container {
	@include hidden;
	position: absolute;
	color: $darkcolor;
	margin: auto;
	width: calc(#{hex-width(2.5)} + #{$sqrt3} * #{$hex-margin});
	top: calc(#{hex-height($hex-focus-scale)} + #{$hex-margin * 2});
	left: calc(50% - #{hex-width(1.25)} - #{$sqrt3} * .5 * #{$hex-margin});
	line-height: 1.2;
	max-height: calc(100% - (#{hex-height($hex-focus-scale)} + #{$hex-margin * 2}) - 2.7rem - 4px);
	overflow-y: auto;
	padding: 2px 0;

	.subtitle {
		font-family: Chewy, sans-serif;
		font-size: css-max(#{hex-width(.15)}, 1.4em);
		text-align: center;
		margin-bottom: 1rem;
	}

	.text {
		font-family: "Open Sans", sans-serif;
		font-size: css-max(#{hex-width(.11)}, 1.2em);

		p {
			text-align: center;
		}

		ul {
			padding-left: 2em;

			li + li {
				margin-top: .3em;
			}
		}

		a {
			color: $linkcolor;
			text-decoration: underline;

			&:hover,
			&:focus {
				text-decoration: none;
			}

			i.fa-external-link-alt {
				font-size: .7em;
				margin-left: .35rem;
				vertical-align: 15%;
			}

			&.centered {
				display: block;
				text-align: center;
			}
		}

		.smallfont {
			font-size: #{1em / 2};
		}

		> :first-child {
			margin-top: 0;
		}

		> :last-child {
			margin-bottom: 0;
		}
	}
}